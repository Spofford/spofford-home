// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Studios /> render() renders the component 1`] = `
<div
  className="studios"
>
  <Connect(Header) />
  <div
    className="hero"
  >
    <div
      className="copy-container"
    >
      <h2 />
      <ReactMarkdown
        astPlugins={Array []}
        escapeHtml={true}
        plugins={Array []}
        rawSourcePos={false}
        renderers={Object {}}
        skipHtml={false}
        sourcePos={false}
        transformLinkUri={[Function]}
      />
    </div>
  </div>
  <div
    className="body-container"
  >
    <div
      className="copy-container"
    >
      <h2 />
      <img
        src=""
      />
      <ReactMarkdown
        astPlugins={Array []}
        escapeHtml={true}
        plugins={Array []}
        rawSourcePos={false}
        renderers={Object {}}
        skipHtml={false}
        sourcePos={false}
        transformLinkUri={[Function]}
      />
      <Link
        replace={false}
        to="/show"
      >
        Submit a design
        <FontAwesome
          name="chevron-right"
        />
      </Link>
    </div>
    <div
      className="copy-container"
    >
      <h2 />
      <img
        src=""
      />
      <ReactMarkdown
        astPlugins={Array []}
        escapeHtml={true}
        plugins={Array []}
        rawSourcePos={false}
        renderers={Object {}}
        skipHtml={false}
        sourcePos={false}
        transformLinkUri={[Function]}
      />
      <Link
        replace={false}
        to="/feedback/start"
      >
        view designs
        <FontAwesome
          name="chevron-right"
        />
      </Link>
      <hr />
    </div>
    <div
      className="copy-container"
    >
      <h2 />
      <img
        src=""
      />
      <ReactMarkdown
        astPlugins={Array []}
        escapeHtml={true}
        plugins={Array []}
        rawSourcePos={false}
        renderers={Object {}}
        skipHtml={false}
        sourcePos={false}
        transformLinkUri={[Function]}
      />
      <a
        href="http://may-insights.spofforddesign.com/"
        target="_blank"
      >
        read on
        <FontAwesome
          name="chevron-right"
        />
      </a>
    </div>
  </div>
</div>
`;

exports[`<Studios /> renders the component 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Connect(Studios)
    getContent={[MockFunction]}
    store={
      Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "content": undefined,
      "getContent": [Function],
      "store": Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      },
      "storeSubscription": Subscription {
        "listeners": Object {
          "clear": [Function],
          "get": [Function],
          "notify": [Function],
          "subscribe": [Function],
        },
        "onStateChange": [Function],
        "parentSub": undefined,
        "store": Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        },
        "unsubscribe": [Function],
      },
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "content": undefined,
        "getContent": [Function],
        "store": Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        },
        "storeSubscription": Subscription {
          "listeners": Object {
            "clear": [Function],
            "get": [Function],
            "notify": [Function],
            "subscribe": [Function],
          },
          "onStateChange": [Function],
          "parentSub": undefined,
          "store": Object {
            "clearActions": [Function],
            "dispatch": [Function],
            "getActions": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
          },
          "unsubscribe": [Function],
        },
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
